// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: copyfrom.go

package db

import (
	"context"
)

// iteratorForBulkCreateSeasons implements pgx.CopyFromSource.
type iteratorForBulkCreateSeasons struct {
	rows                 []BulkCreateSeasonsParams
	skippedFirstNextCall bool
}

func (r *iteratorForBulkCreateSeasons) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForBulkCreateSeasons) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].SeasonID,
		r.rows[0].Name,
		r.rows[0].StartDate,
		r.rows[0].EndDate,
	}, nil
}

func (r iteratorForBulkCreateSeasons) Err() error {
	return nil
}

func (q *Queries) BulkCreateSeasons(ctx context.Context, arg []BulkCreateSeasonsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"seasons"}, []string{"season_id", "name", "start_date", "end_date"}, &iteratorForBulkCreateSeasons{rows: arg})
}
